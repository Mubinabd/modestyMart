basePath: /
definitions:
  genproto.Cart:
    properties:
      amount:
        type: number
      cart_name:
        type: string
      cart_number:
        type: integer
      created_at:
        type: string
      id:
        type: string
      user:
        $ref: '#/definitions/genproto.UserRes'
    type: object
  genproto.Categories:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  genproto.ChangePasswordReqBody:
    properties:
      CurrentPassword:
        type: string
      NewPassword:
        type: string
    type: object
  genproto.CreateCartReq:
    properties:
      amount:
        type: number
      cart_name:
        type: string
      cart_number:
        type: integer
      user_id:
        type: string
    type: object
  genproto.CreateCategoryReq:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  genproto.CreateOrderReq:
    properties:
      productID:
        type: string
      quantity:
        type: integer
      status:
        type: string
      total_price:
        type: number
      userID:
        type: string
    type: object
  genproto.CreatePaymentReq:
    properties:
      amount:
        type: integer
      card_id:
        type: string
      orderID:
        type: string
      payment_method:
        type: string
      status:
        type: string
    type: object
  genproto.CreateProductReq:
    properties:
      categoryID:
        type: string
      description:
        type: string
      image_url:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    type: object
  genproto.EditProfileReqBpdy:
    properties:
      DateOfBirth:
        type: string
      Email:
        type: string
      FullName:
        type: string
      Username:
        type: string
    type: object
  genproto.GetByEmail:
    properties:
      email:
        type: string
    type: object
  genproto.GetCategoryRes:
    properties:
      count:
        type: integer
      products:
        $ref: '#/definitions/genproto.Products'
    type: object
  genproto.GetOrdersRes:
    properties:
      count:
        type: integer
      orders:
        items:
          $ref: '#/definitions/genproto.Orders'
        type: array
    type: object
  genproto.ListAllCartRes:
    properties:
      carts:
        items:
          $ref: '#/definitions/genproto.Cart'
        type: array
      count:
        type: integer
    type: object
  genproto.ListAllProductsRes:
    properties:
      count:
        type: integer
      products:
        items:
          $ref: '#/definitions/genproto.Products'
        type: array
    type: object
  genproto.ListCategoriesRes:
    properties:
      categories:
        items:
          $ref: '#/definitions/genproto.Categories'
        type: array
      count:
        type: integer
    type: object
  genproto.ListOrdersRes:
    properties:
      count:
        type: integer
      orders:
        items:
          $ref: '#/definitions/genproto.Orders'
        type: array
    type: object
  genproto.ListPaymentsRes:
    properties:
      count:
        type: integer
      payment:
        items:
          $ref: '#/definitions/genproto.Payment'
        type: array
    type: object
  genproto.ListUserRes:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/genproto.UserRes'
        type: array
    type: object
  genproto.LoginReq:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  genproto.Orders:
    properties:
      created_at:
        type: string
      id:
        type: string
      product:
        $ref: '#/definitions/genproto.ProductsRes'
      quantity:
        type: integer
      status:
        type: string
      total_price:
        type: number
      user:
        $ref: '#/definitions/genproto.UserRes'
    type: object
  genproto.OrdersRes:
    properties:
      created_at:
        type: string
      id:
        type: string
      productID:
        type: string
      quantity:
        type: integer
      status:
        type: string
      total_price:
        type: number
      userID:
        type: string
    type: object
  genproto.Payment:
    properties:
      amount:
        type: integer
      cart_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      order:
        $ref: '#/definitions/genproto.OrdersRes'
      payment_method:
        type: string
      status:
        type: string
    type: object
  genproto.Products:
    properties:
      category:
        $ref: '#/definitions/genproto.Categories'
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      image_url:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    type: object
  genproto.ProductsRes:
    properties:
      categoryID:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      image_url:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    type: object
  genproto.RegisterReq:
    properties:
      date_of_birth:
        type: string
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  genproto.ResetPassReqBody:
    properties:
      new_password:
        type: string
      reset_token:
        type: string
    type: object
  genproto.Setting:
    properties:
      Language:
        type: string
      Notification:
        type: string
      PrivacyLevel:
        type: string
      Theme:
        type: string
    type: object
  genproto.UpdateCategory:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  genproto.UpdateCategoryReq:
    properties:
      body:
        $ref: '#/definitions/genproto.UpdateCategory'
      id:
        type: string
    type: object
  genproto.UpdateOrder:
    properties:
      productID:
        type: string
      quantity:
        type: integer
      status:
        type: string
      total_price:
        type: number
      userID:
        type: string
    type: object
  genproto.UpdateOrderReq:
    properties:
      id:
        type: string
      order:
        $ref: '#/definitions/genproto.UpdateOrder'
    type: object
  genproto.UpdateProduct:
    properties:
      categoryID:
        type: string
      description:
        type: string
      image_url:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    type: object
  genproto.UpdateProductReq:
    properties:
      body:
        $ref: '#/definitions/genproto.UpdateProduct'
      id:
        type: string
    type: object
  genproto.UserRes:
    properties:
      DateOfBirth:
        type: string
      Email:
        type: string
      FullName:
        type: string
      Id:
        type: string
      Role:
        type: string
      Username:
        type: string
    type: object
info:
  contact: {}
  description: API for Instant Delivery resources
  title: Modesty Mart API Documentation
  version: "1.0"
paths:
  /developers:
    get:
      consumes:
      - application/json
      description: Get all developers
      parameters:
      - description: UserName
        in: query
        name: username
        type: string
      - description: Full Name
        in: query
        name: full_name
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/genproto.ListUserRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get all developers
      tags:
      - auth
  /forgot-password:
    post:
      consumes:
      - application/json
      description: Request to reset user's password
      parameters:
      - description: Email Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/genproto.GetByEmail'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset email sent successfully
          schema:
            type: string
        "400":
          description: invalid request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Forgot password
      tags:
      - auth
  /login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: Login Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/genproto.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: invalid request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Login a user
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Register User Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/genproto.RegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            type: string
        "400":
          description: invalid request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Register a new user
      tags:
      - auth
  /reset-password:
    post:
      consumes:
      - application/json
      description: Reset user's password with a reset code
      parameters:
      - description: Password Reset Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/genproto.ResetPassReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset successfully
          schema:
            type: string
        "400":
          description: invalid request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Reset password
      tags:
      - auth
  /v1/cart/{id}:
    get:
      consumes:
      - application/json
      description: Get an Cart by ID
      parameters:
      - description: Cart ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cart data
          schema:
            $ref: '#/definitions/genproto.Cart'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: Cart not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Cart
      tags:
      - Cart
  /v1/cart/create:
    post:
      consumes:
      - application/json
      description: Create a new Cart
      parameters:
      - description: Cart data
        in: body
        name: Cart
        required: true
        schema:
          $ref: '#/definitions/genproto.CreateCartReq'
      produces:
      - application/json
      responses:
        "200":
          description: message":"Cart created successfully
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Cart
      tags:
      - Cart
  /v1/cart/list:
    get:
      consumes:
      - application/json
      description: List Carts with filters
      parameters:
      - description: Cart Name
        in: query
        name: cart_name
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of Carts
          schema:
            $ref: '#/definitions/genproto.ListAllCartRes'
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: List Carts
      tags:
      - Cart
  /v1/category/{id}:
    get:
      consumes:
      - application/json
      description: Get an Category by ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Category data
          schema:
            $ref: '#/definitions/genproto.Categories'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: Category not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Category
      tags:
      - Category
  /v1/category/create:
    post:
      consumes:
      - application/json
      description: Create a new Category
      parameters:
      - description: Category data
        in: body
        name: Category
        required: true
        schema:
          $ref: '#/definitions/genproto.CreateCategoryReq'
      produces:
      - application/json
      responses:
        "200":
          description: message":"Category created successfully
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Category
      tags:
      - Category
  /v1/category/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an Category by ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: message":"Category deleted successfully
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete Category
      tags:
      - Category
  /v1/category/list:
    get:
      consumes:
      - application/json
      description: List Categorys with filters
      parameters:
      - description: Name
        in: query
        name: name
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of Categorys
          schema:
            $ref: '#/definitions/genproto.ListCategoriesRes'
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: List Categorys
      tags:
      - Category
  /v1/category/update/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing Category by ID
      parameters:
      - description: Category update data
        in: body
        name: Category
        required: true
        schema:
          $ref: '#/definitions/genproto.UpdateCategoryReq'
      produces:
      - application/json
      responses:
        "200":
          description: message":"Category updated successfully
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update Category
      tags:
      - Category
  /v1/order/{id}:
    get:
      consumes:
      - application/json
      description: Get an Order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order data
          schema:
            $ref: '#/definitions/genproto.Orders'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: Order not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Order
      tags:
      - Order
  /v1/order/by-product/{id}:
    get:
      consumes:
      - application/json
      description: Get an Order by Product ID
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order data
          schema:
            $ref: '#/definitions/genproto.GetOrdersRes'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: Order not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Order By Product ID
      tags:
      - Order
  /v1/order/by-user/{id}:
    get:
      consumes:
      - application/json
      description: Get an Order by User ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order data
          schema:
            $ref: '#/definitions/genproto.GetOrdersRes'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: Order not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Order By User ID
      tags:
      - Order
  /v1/order/create:
    post:
      consumes:
      - application/json
      description: Create a new Order
      parameters:
      - description: Order data
        in: body
        name: Order
        required: true
        schema:
          $ref: '#/definitions/genproto.CreateOrderReq'
      produces:
      - application/json
      responses:
        "200":
          description: message":"Order created successfully
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Order
      tags:
      - Order
  /v1/order/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an Order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: message":"Order deleted successfully
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete Order
      tags:
      - Order
  /v1/order/list:
    get:
      consumes:
      - application/json
      description: List Orders with filters
      parameters:
      - description: Status
        in: query
        name: status
        type: integer
      - description: Quantity
        in: query
        name: quantity
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of Orders
          schema:
            $ref: '#/definitions/genproto.ListOrdersRes'
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: List Orders
      tags:
      - Order
  /v1/order/update/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing Order by ID
      parameters:
      - description: Order update data
        in: body
        name: Order
        required: true
        schema:
          $ref: '#/definitions/genproto.UpdateOrderReq'
      produces:
      - application/json
      responses:
        "200":
          description: message":"Order updated successfully
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update Order
      tags:
      - Order
  /v1/payment/{id}:
    get:
      consumes:
      - application/json
      description: Get an Payment by ID
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Payment data
          schema:
            $ref: '#/definitions/genproto.Payment'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: Payment not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Payment
      tags:
      - Payment
  /v1/payment/create:
    post:
      consumes:
      - application/json
      description: Create a new Payment
      parameters:
      - description: Payment data
        in: body
        name: Payment
        required: true
        schema:
          $ref: '#/definitions/genproto.CreatePaymentReq'
      produces:
      - application/json
      responses:
        "200":
          description: message":"Payment created successfully
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Payment
      tags:
      - Payment
  /v1/payment/list:
    get:
      consumes:
      - application/json
      description: List Payments with filters
      parameters:
      - description: Payment Method
        in: query
        name: payment_method
        type: integer
      - description: Status
        in: query
        name: status
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of Payments
          schema:
            $ref: '#/definitions/genproto.ListPaymentsRes'
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: List Payments
      tags:
      - Payment
  /v1/product/{id}:
    get:
      consumes:
      - application/json
      description: Get an Product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Product data
          schema:
            $ref: '#/definitions/genproto.Products'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: Product not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Product
      tags:
      - Product
  /v1/product/by-category/{id}:
    get:
      consumes:
      - application/json
      description: Get an Product by User ID
      parameters:
      - description: Category ID
        in: path
        name: category_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Product data
          schema:
            $ref: '#/definitions/genproto.GetCategoryRes'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: Product not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Product By User ID
      tags:
      - Product
  /v1/product/by-range:
    get:
      consumes:
      - application/json
      description: Get an Product by Product ID
      parameters:
      - description: min_price
        in: path
        name: min_price
        required: true
        type: integer
      - description: max_price
        in: path
        name: max_price
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Product data
          schema:
            $ref: '#/definitions/genproto.ListAllProductsRes'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: Product not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Product By Product ID
      tags:
      - Product
  /v1/product/create:
    post:
      consumes:
      - application/json
      description: Create a new Product
      parameters:
      - description: Product data
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/genproto.CreateProductReq'
      produces:
      - application/json
      responses:
        "200":
          description: message":"Product created successfully
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Product
      tags:
      - Product
  /v1/product/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an Product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: message":"Product deleted successfully
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete Product
      tags:
      - Product
  /v1/product/list:
    get:
      consumes:
      - application/json
      description: List Products with filters
      parameters:
      - description: Name
        in: query
        name: name
        type: integer
      - description: Price
        in: query
        name: price
        type: integer
      - description: Stock
        in: query
        name: stock
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of Products
          schema:
            $ref: '#/definitions/genproto.ListAllProductsRes'
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: List Products
      tags:
      - Product
  /v1/product/update/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing Product by ID
      parameters:
      - description: Product update data
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/genproto.UpdateProductReq'
      produces:
      - application/json
      responses:
        "200":
          description: message":"Product updated successfully
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update Product
      tags:
      - Product
  /v1/user:
    delete:
      consumes:
      - application/json
      description: Delete a user with the specified ID
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete user
      tags:
      - users
  /v1/user/passwords:
    put:
      consumes:
      - application/json
      description: Update the password of a user with the specified ID
      parameters:
      - description: Updated password details
        in: body
        name: password
        required: true
        schema:
          $ref: '#/definitions/genproto.ChangePasswordReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: Password updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Change user password
      tags:
      - users
  /v1/user/profiles:
    get:
      consumes:
      - application/json
      description: Retrieve the profile of a user with the specified ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/genproto.UserRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update the profile of a user with the specified ID
      parameters:
      - description: Updated profile details
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/genproto.EditProfileReqBpdy'
      produces:
      - application/json
      responses:
        "200":
          description: Profile updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Edit user profile
      tags:
      - users
  /v1/user/setting:
    get:
      consumes:
      - application/json
      description: Retrieve the settings of a user with the specified ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/genproto.Setting'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get user settings
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update the settings of a user with the specified ID
      parameters:
      - description: Updated setting details
        in: body
        name: setting
        required: true
        schema:
          $ref: '#/definitions/genproto.Setting'
      produces:
      - application/json
      responses:
        "200":
          description: Setting updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Edit user settings
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
